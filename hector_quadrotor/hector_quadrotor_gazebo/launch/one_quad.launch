<?xml version="1.0"?>

<launch>

  <!-- Start Gazebo with wg world running in (max) realtime -->
  <!-- <include file="$(find hector_gazebo_worlds)/launch/rolling_landscape_120m.launch"/> -->
  <include file="$(find hector_gazebo_worlds)/launch/test_city.launch"/>
  
  <!-- Spawn simulated quadrotor uav -->
  
  <group ns="quad1">
    <include file="$(find hector_quadrotor_gazebo)/launch/spawn_quadrotor.launch" >
      <arg name="model" value="$(find hector_quadrotor_description)/urdf/quadrotor_hokuyo_utm30lx.gazebo.xacro"/>
      <arg name="controllers" value="
        controller/attitude
        controller/velocity
        controller/position
        "/>
    </include>

    <!-- Start rviz visualization with preset config -->
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find hector_quadrotor_demo)/rviz_cfg/outdoor_flight.rviz"/>

    <include file="$(find hector_quadrotor_teleop)/launch/xbox_controller.launch" >
      <arg name="control_mode" value="position"/>
    </include>
  </group>

<!-- R1 Rover  -->
  <group ns="R1">
    <arg name="name" value="R1" />
    <arg name="tf_prefix" value="R1" />
    <param
      name="robot_description"
      command="$(find xacro)/xacro '$(find aion_r1_description)/urdf/r1_sim.urdf.xacro' --inorder" />
    <node
      name="spawn_model"
      pkg="gazebo_ros"
      type="spawn_model"
      args="-param robot_description -urdf -model r1_sim -x 1.0 -y 0 -z 0.5"
      output="screen" />
    <node
      name="fake_joint_calibration"
      pkg="rostopic"
      type="rostopic"
      args="pub /calibrated std_msgs/Bool true" />
    <node
      name="joint_state_publisher"
      pkg="joint_state_publisher"
      type="joint_state_publisher" />
    <node
      name="robot_state_publisher"
      pkg="robot_state_publisher"
      type="robot_state_publisher" />
    <node
      name="rviz"
      pkg="rviz"
      type="rviz"
      args="-d $(find aion_r1_gazebo)/rviz/gazebo.rviz" />

</group>

<!-- R2 Rover  -->
<!-- <group ns="R2">
  <arg name="name" value="R2" />
  <arg name="tf_prefix" value="R2" />
  <param
    name="robot_description"
    command="$(find xacro)/xacro '$(find aion_r1_description)/urdf/r1_sim.urdf.xacro' - -inorder" />
  <node
    name="spawn_model"
    pkg="gazebo_ros"
    type="spawn_model"
    args="-param robot_description -urdf -model r1_sim -x 1.0 -y 1 -z 0.5"
    output="screen" />
  <node
    name="fake_joint_calibration"
    pkg="rostopic"
    type="rostopic"
    args="pub /calibrated std_msgs/Bool true" />
  <node
    name="joint_state_publisher"
    pkg="joint_state_publisher"
    type="joint_state_publisher" />
  <node
    name="robot_state_publisher"
    pkg="robot_state_publisher"
    type="robot_state_publisher" />
</group>

<group ns="R3">
  <arg name="name" value="R3" />
  <arg name="tf_prefix" value="R3" />
  <param
    name="robot_description"
    command="$(find xacro)/xacro '$(find aion_r1_description)/urdf/r1_sim.urdf.xacro' - -inorder" />
  <node
    name="spawn_model"
    pkg="gazebo_ros"
    type="spawn_model"
    args="-param robot_description -urdf -model r1_sim -x 1.0 -y -1 -z 0.5"
    output="screen" />
  <node
    name="fake_joint_calibration"
    pkg="rostopic"
    type="rostopic"
    args="pub /calibrated std_msgs/Bool true" />
  <node
    name="joint_state_publisher"
    pkg="joint_state_publisher"
    type="joint_state_publisher" />
  <node
    name="robot_state_publisher"
    pkg="robot_state_publisher"
    type="robot_state_publisher" />
</group> -->

</launch>
